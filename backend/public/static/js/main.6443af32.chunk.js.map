{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Spinner/Spinner.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","price","push","fillColor","strokeColor","highlightFill","highlightStroke","style","textAlign","bookingsControl","activeOutputType","onChange","BookingsPage","isLoading","outputType","deleteBookingHandler","bookingId","Authorization","filter","changeOutputTypeHandler","fetchBookings","content","Fragment","BookingsChart","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","eventId","date","creatorId","onDetail","eventList","events","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","desc","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","fetchEvents","rows","mainNavigation","Consumer","to","App","Provider","from","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6443af32.chunk.js","sourcesContent":["import React from 'react'\n\nexport default React.createContext({\n  token: null,\n  userId: null,\n  login: (token, userId, tokenExpiration) => {},\n  logout: {}\n});\n","import React, { Component } from 'react';\n\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState(prevState => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password\n      }\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation CreateUser($email: String!, $password: String!) {\n            createUser(userInput: {email: $email, password: $password}) {\n              _id\n              email\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password\n        }\n      };\n    }\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={this.switchModeHandler}>\n            Switch to {this.state.isLogin ? 'Signup' : 'Login'}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React from 'react';\nimport './BookingList.css';\n\nconst bookingList = props => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map(booking => {\n      return (\n        <li key={booking._id} className=\"bookings__item\">\n          <div className=\"bookings__item-data\">\n            {booking.event.title} -{' '}\n            {new Date(booking.createdAt).toLocaleDateString()}\n          </div>\n          <div>\n            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel</button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default bookingList;","import React from 'react';\nimport { Bar as BarChart } from 'react-chartjs';\n\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 100\n  },\n  Normal: {\n    min: 100,\n    max: 200\n  },\n  Expensive: {\n    min: 200,\n    max: 100000\n  }\n}\n\nconst bookings = props => {\n  const chartData = { labels: [], datasets: [] };\n  let values = [];\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\n      if (\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\n        current.event.price < BOOKINGS_BUCKETS[bucket].max) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n    values.push(filteredBookingsCount);\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      // label: \"My First dataset\",\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,0.8)',\n      highlightFill: 'rgba(220,220,220,0.75)',\n      highlightStroke: 'rgba(220,220,220,1)',\n      data: values\n    });\n    values = [...values]\n    values[values.length - 1] = 0;\n  }\n\n  return <div style={{ textAlign: 'center' }}><BarChart data={chartData} /></div>;\n};\n\nexport default bookings;","import React from 'react';\n\nimport './BookingsControls.css';\n\nconst bookingsControl = props => {\n  return (\n    <div className=\"bookings-control\">\n      <button className={props.activeOutputType === 'list' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'list')}>\n        List</button>\n      <button className={props.activeOutputType === 'chart' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'chart')}>\n        Chart</button>\n    </div>\n  )\n}\n\nexport default bookingsControl","import React, { Component } from 'react'\n\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport BookingList from '../components/Bookings/BookingList/BookingList';\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\n\nclass BookingsPage extends Component {\n  state = {\n    isLoading: false,\n    bookings: [],\n    outputType: 'list'\n  }\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings() {\n    this.setState({ isLoading: true })\n    const requestBody = {\n      query: `\n            query {\n              bookings {\n                _id\n                createdAt\n                event {\n                  _id\n                  title\n                  date\n                  price\n                }\n              }\n            }\n          `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        const bookings = resData.data.bookings;\n        this.setState({ bookings: bookings, isLoading: false })\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false })\n      })\n  }\n\n  deleteBookingHandler = bookingId => {\n    this.setState({ isLoading: true })\n    const requestBody = {\n      query: `\n            mutation CancelBooking($id: ID!) {\n              cancelBooking(bookingId: $id) {\n                _id\n                title\n              }\n            }\n          `,\n      variables: {\n        id: bookingId\n      }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState(prevState => {\n          // const updatedBookings = [...prevState.bookings];\n          const updatedBookings = prevState.bookings.filter(booking => {\n            return booking._id !== bookingId;\n          });\n          return { bookings: updatedBookings, isLoading: false }\n        })\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false })\n      })\n  }\n\n  changeOutputTypeHandler = (outputType) => {\n    if (outputType === 'list') {\n      this.setState({ outputType: 'list' })\n    } else {\n      this.setState({ outputType: 'chart' })\n    }\n  }\n\n  render() {\n    let content = <Spinner />\n    if (!this.state.isLoading) {\n      content = (\n        <React.Fragment>\n          <BookingsControls activeOutputType={this.state.outputType} onChange={this.changeOutputTypeHandler} />\n          <div>\n            {this.state.outputType === 'list' ?\n              <BookingList\n                bookings={this.state.bookings}\n                onDelete={this.deleteBookingHandler} /> :\n              <BookingsChart bookings={this.state.bookings} />}\n          </div>\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        {content}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BookingsPage;","import React from 'react';\n\nimport './Modal.css';\n\nconst modal = props => (\n  <div className=\"modal\">\n    <header className=\"modal__header\">\n      <h1>{props.title}</h1>\n    </header>\n    <section className=\"modal__content\">{props.children}</section>\n    <section className=\"modal__actions\">\n    {props.canCancel && (\n      <button className=\"btn\" onClick={props.onCancel}>\n        Cancel\n      </button>\n    )}\n    {props.canConfirm && (\n      <button className=\"btn\" onClick={props.onConfirm}>\n        {props.confirmText}\n      </button>\n    )}\n    </section>\n  </div>\n);\n\nexport default modal;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => <div className=\"backdrop\"></div>\n\nexport default backdrop;","import React from 'react';\n\nimport './EventItem.css';\n\nconst eventItem = props => (\n  <li key={props.eventId} className=\"events__list-item\">\n    <div>\n      <h1>{props.title}</h1>\n      <h2>\n        €{props.price} - {new Date(props.date).toLocaleDateString()}\n      </h2>\n    </div>\n    <div>\n      {props.userId === props.creatorId ? (\n        <p>You are the owner of this event.</p>\n      ) : (\n          <button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>\n            View Details\n          </button>\n        )}\n    </div>\n  </li>\n);\n\nexport default eventItem;\n","import React from 'react';\n\nimport EventItem from './EventItem/EventItem';\nimport './EventList.css';\n\nconst eventList = props => {\n  const events = props.events.map(event => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        price={event.price}\n        date={event.date}\n        userId={props.authUserId}\n        creatorId={event.creator._id}\n        onDetail={props.onViewDetail}\n      />\n    );\n  });\n  return (<ul className=\"event__list\">{events}</ul>);\n};\n\nexport default eventList;","import React, { Component } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport AuthContext from '../context/auth-context';\nimport EventList from '../components/Events/EventList/EventList';\nimport Spinner from '../components/Spinner/Spinner';\nimport './Events.css';\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: [],\n    isLoading: false,\n    selectedEvent: null\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  };\n\n  componentDidMount() {\n    this.fetchEvents();\n  };\n\n  startCreateEventHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const price = +this.priceElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) {\n      return;\n    }\n\n    const event = { title, price, date, description };\n    console.log(event)\n\n    const requestBody = {\n      query: `\n          mutation CreateEvent($title: String!, $desc: String!, $price: Float!, $date: String!) {\n            createEvent(eventInput: {title: $title, description: $desc, price: $price, date: $date}) {\n              _id\n              title\n              description\n              date\n              price\n            }\n          }\n        `,\n      variables: {\n        title: title,\n        desc: description,\n        price: price,\n        date: date\n      }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData);\n        this.setState(prevState => {\n          const updatedEvents = [...prevState.events]\n          updatedEvents.push({\n            _id: resData.data.createEvent._id,\n            title: resData.data.createEvent.title,\n            description: resData.data.createEvent.description,\n            price: resData.data.createEvent.price,\n            date: resData.data.createEvent.date,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return { events: updatedEvents };\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedEvent: null });\n  }\n\n  fetchEvents() {\n    this.setState({ isLoading: true })\n    const requestBody = {\n      query: `\n          query {\n            events {\n              _id\n              title\n              description\n              price\n              date\n              creator {\n                _id\n                email\n              }\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        // console.log(resData);\n        const events = resData.data.events;\n        this.setState({ events: events, isLoading: false })\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false })\n      })\n  };\n\n  showDetailHandler = eventId => {\n    this.setState(prevState => {\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\n      return { selectedEvent: selectedEvent };\n    })\n  }\n\n  bookEventHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedEvent: null })\n      return;\n    }\n    const requestBody = {\n      query: `\n          mutation bookEvent($id: ID!) {\n            bookEvent(eventId: $id) {\n              _id\n              createdAt\n              updatedAt\n            }\n          }\n        `,\n      variables: {\n        id: this.state.selectedEvent._id\n      }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({ selectedEvent: null })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\n        {this.state.creating &&\n          <Modal\n            title=\"Add Event\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"date\" id=\"date\" ref={this.dateElRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea type=\"description\" rows=\"4\" ref={this.descriptionElRef}></textarea>\n              </div>\n            </form>\n          </Modal>}\n        {this.state.selectedEvent && (\n          <Modal\n            title={this.state.selectedEvent.title}\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.bookEventHandler}\n            confirmText={this.context.token ? 'Book' : 'Confirm'}\n          >\n            <h1>{this.state.selectedEvent.title}</h1>\n            <h2>€{this.state.selectedEvent.price} - {new Date(this.state.selectedEvent.date).toLocaleDateString()} </h2>\n            <p>{this.state.selectedEvent.description}</p>\n          </Modal>\n        )}\n        {this.context.token && <div className=\"events-control\">\n          <p>Share your own events!</p>\n          <button className=\"btn\" onClick={this.startCreateEventHandler}>Create Event</button>\n        </div>}\n        {this.state.isLoading ? (<Spinner />\n        ) : (\n            <EventList\n              events={this.state.events}\n              authUserId={this.context.userId}\n              onViewDetail={this.showDetailHandler}\n            />)}\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventsPage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context'\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {(context) => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n          </div>\n          <h1>Easy Event</h1>\n          <div>\n            <nav className=\"main-navigation__items\">\n              <ul>\n                {!context.token && (\n                  <li>\n                    <NavLink to=\"/auth\">Authenticate</NavLink>\n                  </li>)}\n                <li>\n                  <NavLink to=\"/events\">Events</NavLink>\n                </li>\n                {context.token && (\n                  <React.Fragment>\n                    <li>\n                      <NavLink to=\"/bookings\">Bookings</NavLink>\n                    </li>\n                    <li>\n                      <button onClick={context.logout}>Logout</button>\n                    </li>\n                  </React.Fragment>\n                )}\n              </ul>\n            </nav>\n          </div>\n        </header>\n      )\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport BookingsPage from './pages/Bookings';\nimport EventsPage from './pages/Events';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  }\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId })\n  }\n\n  logout = () => {\n    this.setState({ token: null, userId: null })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}